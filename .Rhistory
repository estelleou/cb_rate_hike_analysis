ungroup()
ranked_list <-
unique(ranked_data$country)
cntry_cleaned_covid %>%
filter(country %in% list_of_countries) %>%
filter(date == last(date)) %>%
mutate(country = (factor(country, levels = ranked_list))) %>%
filter(country != "NA") %>%
ggplot()+
geom_bar(aes(x = fully_vaxed_per_pop, y = country), stat = "identity",  fill = "#336600") +
geom_vline(xintercept = 75, linetype = "dashed")+
scale_x_continuous(lim = c(0, 100, 25))+
theme_classic() +
theme(plot.title = element_text(size = 25, face ="bold"),
plot.subtitle= element_text(size = 20),
axis.text = element_text(face = "bold", size = 18),
legend.title = element_text(size = 18),
legend.text = element_text(size = 18))
}
#vaccination rate chart
vax_rate <- function(cntry) {
cntry_vax_number <-
cntry_cleaned_covid %>%
filter(country == cntry) %>%
select(date,country, fully_vaxed_per_pop) %>%
fill(fully_vaxed_per_pop , .direction = "down") %>%
filter(date == last(date))
cntry_cleaned_covid %>%
select(date, country, new_vax_avg_per_pop) %>%
filter(country == cntry) %>%
mutate(new_vax_avg_per_pop = ifelse(date <= as.Date("2021-02-01"), 0, new_vax_avg_per_pop)) %>%
fill(new_vax_avg_per_pop, .direction = "down") %>%
filter(country == cntry) %>%
ggplot()+
geom_line(aes(x = date, y = new_vax_avg_per_pop), color = "dark green", size = 1)+
scale_x_date(lim = c(as.Date("2020-03-15"),
as.Date(max(cntry_cleaned_covid$date))),
date_label = " ",
date_breaks = "4 months" ) +
labs(title = paste0(cntry, " (",
round(cntry_vax_number$fully_vaxed_per_pop, 1),
"%*)"),
subtitle = "Daily Vaccination Rate \n(% of pop.) (7-day avg.) ",
x = "", y = "") +
theme_classic() +
theme(plot.title = element_text(size = 20, face ="bold"),
plot.subtitle= element_text(size = 17),
axis.text = element_text(face = "bold", size = 12),
axis.text.x = element_blank(),
plot.margin = margin(5,5,5,5))
}
new_cases <- function(cntry){
cntry_cleaned_covid %>%
select(date, country, new_cases_avg) %>%
filter(country == cntry) %>%
ggplot() +
geom_line(aes(x= date, y = new_cases_avg), color = "black", size = 1) +
scale_x_date(lim = c(as.Date("2020-03-15"),
as.Date(max(cntry_cleaned_covid$date))),
date_label = "",
date_breaks = "4 months" ) +
labs(subtitle = "New Cases (7-day avg.)",
x = "", y = "") +
theme_classic() +
theme(axis.text = element_text(face = "bold", size = 12),
axis.text.x = element_blank(),
plot.subtitle = element_text(size = 17))
}
new_deaths <- function(cntry){
cntry_cleaned_covid %>%
select(date, country, new_deaths_avg) %>%
filter(country == cntry) %>%
ggplot() +
geom_line(aes(x= date, y = new_deaths_avg), color = "red", size = 1) +
scale_x_date(lim = c(as.Date("2020-03-15"),
as.Date(max(cntry_cleaned_covid$date))),
date_label = "%b %y",
date_breaks = "4 months" ) +
labs(subtitle = "New Deaths (7-day avg.)",
x = "", y = "") +
theme_classic() +
theme(axis.text = element_text(face = "bold", size = 12),
plot.subtitle = element_text(size = 17))
}
# OUTPUT ---------------------------------------------------------------------
#covid situation in select countries
pdf(paste0(wd, "/output/covid_situation_pulls.pdf"), h = 8, w = 15)
grid.arrange( vax_rate("Israel"), vax_rate("South Korea"),  vax_rate("Australia"),vax_rate("Malaysia"),
new_cases("Israel"), new_cases("South Korea") ,new_cases("Australia"), new_cases("Malaysia"),
new_deaths("Israel"), new_deaths("South Korea"),new_deaths("Australia"), new_deaths("Malaysia"),
nrow = 3,
bottom = textGrob(
"* = % of population fully vaccinated \nSource: JHU",
gp = gpar(fontface = 3, fontsize = 15),
hjust = 1,
x = 1))
dev.off()
#Hotpots------------------------------------------------------------------
em_hotspot <-
cases_hotspot_visuals(em) +
labs(title = "EM Covid Case Hotspots")
dm_hotspot <-
cases_hotspot_visuals(dm) +
labs(title = "DM Covid Case Hotpots")
eu_hotspot <-
cases_hotspot_visuals(eu) +
labs(title = "EU Covid Case Hotspots")
asia_hotspot <-
cases_hotspot_visuals(asia)+
labs(title = "Asia Covid Case Hotspots")
latam_hotspot <-
cases_hotspot_visuals(latam) +
labs(title = "Latam Covid Case Hotspots")
global_hotspot <-
cases_hotspot_visuals("global") +
labs(title = "Top 20 Global Covid Case Hotspots")
# G20 -----------------------------------------------------------------------
g20_mobility <-
mobility_heatmap(g_20_exEU) +
labs(title = "G20 Mobility",
subtitle = paste0("From Least Mobile (Top) to Most on ",format(max(cntry_cleaned_mobility$date), "%m-%d")),
x = "",
y = "")
g20_covid_cases <-
covid_cases_ranking_bar(g_20_exEU, "Cases per million") +
labs(title = "G20 Covid Cases per million",
subtitle = paste0("(7-day avg.) as of ",format(max(cntry_cleaned_covid$date), "%b-%d")),
x = "",
y = "")
g20_covid_deaths <-
covid_deaths_ranking_bar(g_20_exEU, "Deaths per million") +
labs(title = "G20 Covid Deaths per million",
subtitle = paste0("(7-day avg.) as of ",format(max(cntry_cleaned_covid$date), "%b-%d")),
x = "",
y = "")
g20_vaccination <-
vaccintaion_ranking(g_20_exEU) +
labs(title = "G20 Vaccination",
subtitle = paste0("(% of population) as of ", format(max(cntry_cleaned_covid$date), "%b-%d")),
x = "",
y = "")
#EM ----------------------------------------------------------------------
em_mobility <-
mobility_heatmap(em) +
labs(title = "EM Mobility",
subtitle = paste0("From Least Mobile (Top) to Most on ",format(max(cntry_cleaned_mobility$date), "%m-%d")),
x = "",
y = "")
em_covid_cases <-
covid_cases_ranking_bar(em, "Cases per million") +
labs(title = "EM Covid Cases per million",
subtitle = paste0("(7-day avg.) as of ",format(max(cntry_cleaned_covid$date), "%b-%d")),
x = "",
y = "")
em_covid_deaths <-
covid_deaths_ranking_bar(em, "Deaths per million") +
labs(title = "EM Covid Deaths per million",
subtitle = paste0("(7-day avg.) as of ",format(max(cntry_cleaned_covid$date), "%b-%d")),
x = "",
y = "")
em_vaccination <-
vaccintaion_ranking(em) +
labs(title = "EM Vaccination",
subtitle = paste0("(% of population) as of ", format(max(cntry_cleaned_covid$date), "%b-%d")),
x = "",
y = "")
#major advanced ----------------------------------------------------------------------
dm_mobility <-
mobility_heatmap(dm) +
labs(title = "DM Mobility",
subtitle = paste0("From Least Mobile (Top) to Most on ",format(max(cntry_cleaned_mobility$date), "%m-%d")),
x = "",
y = "")
dm_covid_cases <-
covid_cases_ranking_bar(dm, "Cases per million") +
labs(title = "DM Covid Cases per million",
subtitle = paste0("(7-day avg.) as of ",format(max(cntry_cleaned_covid$date), "%b-%d")),
x = "",
y = "")
dm_covid_deaths <-
covid_deaths_ranking_bar(dm, "Deaths per million") +
labs(title = "DM Covid Deaths per million",
subtitle = paste0("(7-day avg.) as of ",format(max(cntry_cleaned_covid$date), "%b-%d")),
x = "",
y = "")
dm_vaccination <-
vaccintaion_ranking(dm) +
labs(title ="DM Vaccination",
subtitle = paste0("(% of population) as of ", format(max(cntry_cleaned_covid$date), "%b-%d")),
x = "",
y = "")
#OUTPUT -------------------------------------------------------------------
pdf(paste0(wd, "/output/covid_rankings.pdf"), w = 30, h = 15)
grid.arrange(em_hotspot, dm_hotspot, eu_hotspot, asia_hotspot, latam_hotspot, global_hotspot,
nrow = 2,
top = textGrob("Covid Case Hotspots This Week In Red",
gp = gpar(fontface = 4, fontsize = 30,
hjust = 4.3)),
bottom = textGrob(
"Source: JHU",
gp = gpar(fontface = 3, fontsize = 15),
hjust = 1,
x = 1))
grid.arrange(g20_mobility, g20_covid_cases, g20_covid_deaths, g20_vaccination,
nrow = 1,
top = textGrob("G20 COUNTRIES",
gp = gpar(fontface = 4, fontsize = 30),
hjust = 4.3),
bottom = textGrob(
"Source: JHU and Google Mobility Data",
gp = gpar(fontface = 3, fontsize = 15),
hjust = 1,
x = 1))
grid.arrange(em_mobility, em_covid_cases, em_covid_deaths, em_vaccination,
nrow = 1,
top = textGrob("EM COUNTRIES",
gp = gpar(fontface = 4, fontsize = 30),
hjust = 4.3),
bottom = textGrob(
"Source: JHU and Google Mobility Data",
gp = gpar(fontface = 3, fontsize = 15),
hjust = 1,
x = 1))
grid.arrange(dm_mobility, dm_covid_cases, dm_covid_deaths, dm_vaccination,
nrow = 1,
top = textGrob("DM COUNTRIES",
gp = gpar(fontface = 4, fontsize = 30),
hjust = 4.3),
bottom = textGrob(
"Source: JHU and Google Mobility Data",
gp = gpar(fontface = 3, fontsize = 15),
hjust = 1,
x = 1))
dev.off()
mobility_ts_chart("Australia")
read_csv("D:/Estelle/python/supply_chain_monitor/output.csv")
library(tidyverse)
read_csv("D:/Estelle/python/supply_chain_monitor/output.csv")
test <- read_csv("D:/Estelle/python/supply_chain_monitor/output.csv")
View(test)
library(tidyverse)
read_csv("D:/Estelle/python/supply_chain_monitor/output.csv")
source("D:/Estelle/python/cb_rate_hike/cb_rate_hike_visual.R", echo=TRUE)
library(tidyverse)
library(lubridate)
covid_data <-
read_csv(url("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv"))
covid_data
covid_data %>%
select(location, date, new_cases)
data_we_want_to_work_with <-
covid_data %>%
select(location, date, new_cases)
# creating list of countries to loop through
countries <-
unique(data_we_want_to_work_with$location)
countries
data_we_want_to_work_with %>%
ggplot() +
geom_line(aes(x = date , y = "United States"))
data_we_want_to_work_with %>%
ggplot() +
geom_line(aes(x = date , y = new_cases))
data_we_want_to_work_with %>%
filter(location == "United States") %>%
ggplot() +
geom_line(aes(x = date , y = new_cases))
pdf("test.pdf", h = 8, w = 10.5)
for (i in countries) {
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw
}
dev.off()
pdf("test.pdf", h = 8, w = 10.5)
for (i in countries) {
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
}
dev.off()
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == "United States") %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
for (i in countries) {
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
}
for (i in countries) {
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
ggsave(paste0("graph_", i, ".png"))
}
pdf("test.pdf", h = 8, w = 10.5)
for (i in countries) {
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
ggsave(paste0("graph_", i, ".png"))
}
dev.off()
pdf("test.pdf", h = 8, w = 10.5)
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == "United States") %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
dev.off()
pdf("test.pdf", h = 8, w = 10.5)
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == "United States") %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == "Germany") %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
dev.off()
pdf("test.pdf", h = 8, w = 10.5)
for (i in countries) {
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
# ggsave(paste0("graph_", i, ".png"))
}
dev.off()
pdf("test.pdf", h = 8, w = 10.5)
for (i in countries) {
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
# ggsave(paste0("graph_", i, ".png"))
}
dev.off()
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
pdf("test.pdf", h = 8, w = 10.5)
for (i in countries) {
plot <-
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
# ggsave(paste0("graph_", i, ".png"))
}
dev.off()
pdf("test.pdf", h = 8, w = 10.5)
for ( i in c("United States", "Germany")) {
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
}
dev.off()
pdf("test.pdf", h = 8, w = 10.5)
for ( i in c("United States", "Germany")) {
grid.arrange(
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
)
}
dev.off()
library(grid)
pdf("test.pdf", h = 8, w = 10.5)
for ( i in c("United States", "Germany")) {
grid.arrange(
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
)
}
dev.off()
library(grid)
library(gridExtra)
pdf("test.pdf", h = 8, w = 10.5)
for ( i in c("United States", "Germany")) {
grid.arrange(
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
)
}
dev.off()
pdf("test.pdf", h = 8, w = 10.5)
for (i in countries) {
grid.arrange(
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
theme_bw()
)
# ggsave(paste0("graph_", i, ".png"))
}
dev.off()
#loop may take awhile
pdf("test.pdf", h = 8, w = 10.5)
for (i in countries) {
grid.arrange(
data_we_want_to_work_with %>%
#this is where i'm filtering out the "i" from the dataset
filter(location == i) %>%
ggplot() +
geom_line(aes(x = date , y = new_cases)) +
#adding a title to each chart to be able to tell which is which
labs(title = paste0(i)) +
theme_bw()
)
}
dev.off()
data_we_want_to_work_with
pdf("test_2.pdf", h = 8, w = 10.5)
for (i in countries) {
grid.arrange(
#data is in wide format
data_we_want_to_work_with %>%
pivot_wider(names_from = location, values_from = new_cases) %>%
ggplot() +
geom_line(aes(x = date , y = i)) +
#adding a title to each chart to be able to tell which is which
labs(title = paste0(i)) +
theme_bw()
)
}
dev.off()
data_we_want_to_work_with %>%
pivot_wider(names_from = location, values_from = new_cases)
data_we_want_to_work_with %>%
pivot_wider(names_from = location, values_from = new_cases) %>%
ggplot() +
geom_line(aes(x = date , y = `United States`)) +
#adding a title to each chart to be able to tell which is which
labs(title = paste0(i)) +
theme_bw()
data_we_want_to_work_with %>%
pivot_wider(names_from = location, values_from = new_cases) %>%
ggplot() +
geom_line(aes(x = date , y = `United States`)) +
#adding a title to each chart to be able to tell which is which
labs(title = paste0(i)) +
theme_bw()
data_we_want_to_work_with %>%
pivot_wider(names_from = location, values_from = new_cases) %>%
ggplot() +
geom_line(aes(x = date , y = `United States`)) +
#adding a title to each chart to be able to tell which is which
labs(title = paste0(`United States`)) +
theme_bw()
data_we_want_to_work_with %>%
pivot_wider(names_from = location, values_from = new_cases) %>%
ggplot() +
geom_line(aes(x = date , y = `United States`)) +
#adding a title to each chart to be able to tell which is which
labs(title = paste0(`United States`)) +
theme_bw()
data_we_want_to_work_with %>%
pivot_wider(names_from = location, values_from = new_cases) %>%
ggplot() +
geom_line(aes(x = date , y = `United States`)) +
#adding a title to each chart to be able to tell which is which
labs(title = paste0("United States")) +
theme_bw()
